---
export interface Props {
  title: string;
  description?: string;
}

const { title, description = 'Global Airport Database - Find airports worldwide with interactive maps and detailed information' } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    
    <!-- SEO Meta Tags -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    
  </head>
  <body class="bg-gray-50 text-gray-900">
    <header class="bg-white shadow-sm border-b">
      <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center h-16">
          <div class="flex items-center">
            <a href="/" class="text-xl font-bold text-primary-600">
              ✈️ AirportMap
            </a>
          </div>
          
          <!-- Desktop Navigation -->
          <div class="hidden sm:block">
            <div class="ml-10 flex items-baseline space-x-4">
              <a href="/" class="text-gray-600 hover:text-primary-600 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                Home
              </a>
              <a href="/countries" class="text-gray-600 hover:text-primary-600 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                Countries
              </a>
              <a href="/airports" class="text-gray-600 hover:text-primary-600 px-3 py-2 rounded-md text-sm font-medium transition-colors">
                All Airports
              </a>
            </div>
          </div>
          
          <!-- Mobile menu button -->
          <div class="sm:hidden">
            <button id="mobile-menu-button" class="text-gray-600 hover:text-primary-600 focus:outline-none focus:text-primary-600 p-2">
              <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            </button>
          </div>
        </div>
        
        <!-- Mobile Navigation Menu -->
        <div id="mobile-menu" class="sm:hidden hidden">
          <div class="px-2 pt-2 pb-3 space-y-1 bg-white border-t">
            <a href="/" class="text-gray-600 hover:text-primary-600 block px-3 py-2 rounded-md text-base font-medium transition-colors">
              Home
            </a>
            <a href="/countries" class="text-gray-600 hover:text-primary-600 block px-3 py-2 rounded-md text-base font-medium transition-colors">
              Countries
            </a>
            <a href="/airports" class="text-gray-600 hover:text-primary-600 block px-3 py-2 rounded-md text-base font-medium transition-colors">
              All Airports
            </a>
          </div>
        </div>
      </nav>
    </header>
    
    <main>
      <slot />
    </main>
    
    <footer class="bg-white border-t mt-auto">
      <div class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
        <div class="text-center text-gray-600">
          <p>&copy; 2025 AirportMap. Built with Astro and MapLibre GL JS.</p>
          <p class="mt-2 text-sm">
            Data sourced from ourairports. 
            <a href="https://ourairports.com/data/" class="text-primary-600 hover:text-primary-700">View Data</a>
          </p>
        </div>
      </div>
    </footer>
  </body>
</html>

<style>
  html {
    font-family: system-ui, sans-serif;
  }
  
  body {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
  }
  
  main {
    flex: 1;
  }
</style>

<script>
  import '../styles/global.css';
  
  // Mobile menu toggle functionality
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
      });
      
      // Close mobile menu when clicking outside
      document.addEventListener('click', (event) => {
        const target = event.target as Element;
        if (!mobileMenuButton.contains(target) && !mobileMenu.contains(target)) {
          mobileMenu.classList.add('hidden');
        }
      });
      
      // Close mobile menu when clicking on a link
      const mobileLinks = mobileMenu.querySelectorAll('a');
      mobileLinks.forEach(link => {
        link.addEventListener('click', () => {
          mobileMenu.classList.add('hidden');
        });
      });
    }
  });
</script>