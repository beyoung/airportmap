---
import Layout from "../../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import type { GetStaticPaths } from "astro";

export const prerender = true;

export const getStaticPaths: GetStaticPaths = async () => {
  const blogPosts = await getCollection("blog", ({ data }) => {
    return data.draft !== true;
  });
  
  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
};

type Props = {
  post: CollectionEntry<'blog'>;
};

const { post } = Astro.props as Props;
const { Content } = await post.render();

const title = `${post.data.title} - AyaMap Airports Blog`;
const description = post.data.description || `Read ${post.data.title} on AyaMap Airports Blog`;
const canonicalUrl = `https://airport.ayamap.com/blog/${post.slug}`;
---

<Layout title={title}>
  <!-- SEO Meta Tags -->
  <meta name="description" content={description} slot="head" />
  <meta name="author" content={post.data.author || "AyaMap"} slot="head" />
  <link rel="canonical" href={canonicalUrl} slot="head" />
  
  <!-- Open Graph Meta Tags -->
  <meta property="og:title" content={post.data.title} slot="head" />
  <meta property="og:description" content={description} slot="head" />
  <meta property="og:url" content={canonicalUrl} slot="head" />
  <meta property="og:type" content="article" slot="head" />
  <meta property="article:published_time" content={post.data.publishDate.toISOString()} slot="head" />
  {post.data.author && <meta property="article:author" content={post.data.author} slot="head" />}
  {post.data.tags && post.data.tags.map(tag => 
    <meta property="article:tag" content={tag} slot="head" />
  )}
  {post.data.heroImage && <meta property="og:image" content={post.data.heroImage} slot="head" />}
  
  <!-- Twitter Card Meta Tags -->
  <meta name="twitter:card" content="summary_large_image" slot="head" />
  <meta name="twitter:title" content={post.data.title} slot="head" />
  <meta name="twitter:description" content={description} slot="head" />
  {post.data.heroImage && <meta name="twitter:image" content={post.data.heroImage} slot="head" />}
  
  <!-- Structured Data -->
  <script type="application/ld+json" slot="head">
    {
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "headline": post.data.title,
      "description": description,
      "datePublished": post.data.publishDate.toISOString(),
      "author": {
        "@type": "Person",
        "name": post.data.author || "AyaMap"
      },
      "publisher": {
        "@type": "Organization",
        "name": "AyaMap",
        "url": "https://airport.ayamap.com"
      },
      "url": canonicalUrl,
      "image": post.data.heroImage,
      "keywords": post.data.tags?.join(", ")
    }
  </script>

  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="max-w-4xl mx-auto">
      <!-- Breadcrumb -->
      <nav class="mb-8" aria-label="Breadcrumb">
        <ol class="flex items-center space-x-2 text-sm text-gray-500">
          <li><a href="/" class="hover:text-primary-600">Home</a></li>
          <li><span class="mx-2">/</span></li>
          <li><a href="/blog" class="hover:text-primary-600">Blog</a></li>
          <li><span class="mx-2">/</span></li>
          <li class="text-gray-900 truncate">{post.data.title}</li>
        </ol>
      </nav>

      <!-- Article Header -->
      <header class="mb-8">
        {post.data.heroImage && (
          <img 
            src={post.data.heroImage} 
            alt={post.data.title}
            class="w-full h-64 md:h-96 object-cover rounded-lg mb-8"
          />
        )}
        
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
          {post.data.title}
        </h1>
        
        {post.data.description && (
          <p class="text-xl text-gray-600 mb-6">
            {post.data.description}
          </p>
        )}
        
        <div class="flex flex-wrap items-center gap-4 text-sm text-gray-500 mb-6">
          <time datetime={post.data.publishDate.toISOString()}>
            {post.data.publishDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })}
          </time>
          
          {post.data.author && (
            <>
              <span>•</span>
              <span>By {post.data.author}</span>
            </>
          )}
        </div>
        
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="flex flex-wrap gap-2">
            {post.data.tags.map((tag) => (
              <span class="px-3 py-1 bg-primary-100 text-primary-700 text-sm rounded-full">
                {tag}
              </span>
            ))}
          </div>
        )}
      </header>

      <!-- Article Content -->
      <article class="prose prose-lg prose-slate max-w-none mx-auto">
        <Content />
      </article>

      <!-- Contact Section -->
      <div class="mt-12 p-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl border border-blue-100">
        <div class="text-center">
          <h3 class="text-xl font-semibold text-gray-900 mb-3">
            Have a story idea or feedback?
          </h3>
          <p class="text-gray-600 mb-4">
            We'd love to hear from you. Connect with us through
          </p>
          <a 
            href="mailto:airport@ayamap.com"
            class="inline-flex items-center px-6 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200 shadow-md hover:shadow-lg"
          >
            <svg class="mr-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
            </svg>
            airport@ayamap.com
          </a>
        </div>
      </div>

      <!-- Back to Blog -->
      <div class="mt-8 pt-8 border-t border-gray-200">
        <a 
          href="/blog"
          class="inline-flex items-center text-primary-600 hover:text-primary-700 font-medium"
        >
          <svg class="mr-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
          Back to Blog
        </a>
      </div>
    </div>
  </main>
</Layout>

<script>
  // 客户端代码高亮
  import('../../lib/prism.ts').then(() => {
    if (typeof window !== 'undefined' && window.Prism) {
      window.Prism.highlightAll();
    }
  });
</script>

<style>
  /* 基础文本样式 */
  .prose {
    @apply text-gray-800 leading-relaxed;
    line-height: 1.75;
  }
  
  /* 标题样式优化 */
  .prose h1 {
    @apply text-4xl font-bold text-gray-900 mt-12 mb-6 leading-tight;
    border-bottom: 3px solid #e5e7eb;
    padding-bottom: 0.5rem;
  }
  
  .prose h2 {
    @apply text-3xl font-semibold text-gray-900 mt-10 mb-5 leading-tight;
    border-bottom: 2px solid #f3f4f6;
    padding-bottom: 0.375rem;
  }
  
  .prose h3 {
    @apply text-2xl font-semibold text-gray-900 mt-8 mb-4 leading-tight;
  }
  
  .prose h4 {
    @apply text-xl font-medium text-gray-900 mt-6 mb-3 leading-tight;
  }
  
  .prose h5, .prose h6 {
    @apply text-lg font-medium text-gray-900 mt-6 mb-3 leading-tight;
  }
  
  /* 段落样式 */
  .prose p {
    @apply mb-6 text-base leading-relaxed;
  }
  
  /* 链接样式 */
  .prose a {
    @apply text-blue-600 hover:text-blue-800 underline decoration-2 underline-offset-2 transition-colors duration-200;
  }
  
  /* 列表样式优化 */
  .prose ul {
    @apply mb-6 pl-6 space-y-2;
  }
  
  .prose ol {
    @apply mb-6 pl-6 space-y-2;
  }
  
  .prose li {
    @apply text-base leading-relaxed;
  }
  
  .prose ul > li {
    @apply relative;
  }
  
  .prose ul > li::before {
    content: "•";
    @apply absolute -left-4 text-blue-500 font-bold;
  }
  
  /* 引用块样式 */
  .prose blockquote {
    @apply border-l-4 border-blue-400 bg-blue-50 pl-6 pr-4 py-4 italic text-gray-700 my-8 rounded-r-lg;
  }
  
  .prose blockquote p {
    @apply mb-0 text-lg;
  }
  
  /* 代码样式优化 */
  .prose code {
    @apply bg-gray-100 text-gray-800 px-2 py-1 rounded-md text-sm font-mono border;
    font-size: 0.875em;
  }
  
  .prose pre {
    @apply bg-gray-900 text-gray-100 p-6 rounded-xl overflow-x-auto my-8 shadow-lg;
    font-size: 0.875rem;
    line-height: 1.6;
  }
  
  .prose pre code {
    @apply bg-transparent p-0 text-gray-100 border-0;
  }
  
  /* 图片样式 */
  .prose img {
    @apply rounded-xl my-8 shadow-md w-full;
  }
  
  /* 表格样式 */
  .prose table {
    @apply w-full border-collapse my-8 bg-white rounded-lg overflow-hidden shadow-sm;
  }
  
  .prose th {
    @apply bg-gray-50 px-4 py-3 text-left font-semibold text-gray-900 border-b border-gray-200;
  }
  
  .prose td {
    @apply px-4 py-3 border-b border-gray-100;
  }
  
  .prose tr:hover {
    @apply bg-gray-50;
  }
  
  /* 分隔线样式 */
  .prose hr {
    @apply my-12 border-0 h-px bg-gradient-to-r from-transparent via-gray-300 to-transparent;
  }
  
  /* 强调文本 */
  .prose strong {
    @apply font-semibold text-gray-900;
  }
  
  .prose em {
    @apply italic text-gray-700;
  }
  
  /* 响应式设计 */
  @media (max-width: 768px) {
    .prose {
      @apply text-sm;
    }
    
    .prose h1 {
      @apply text-3xl mt-8 mb-4;
    }
    
    .prose h2 {
      @apply text-2xl mt-6 mb-3;
    }
    
    .prose h3 {
      @apply text-xl mt-6 mb-3;
    }
    
    .prose pre {
      @apply p-4 text-xs;
    }
    
    .prose blockquote {
      @apply pl-4 pr-3 py-3;
    }
  }
</style>